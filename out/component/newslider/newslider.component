<!--
样式：
box公共样式
bottom-mark-height:底部文字描述条高度;
mark-point-width:标记点宽度;
mark-point-height:标记点高度;
mark-point-color:标记点颜色;
color:底部描述文字颜色;
font-size: 底部描述文字大小;


属性：
slider控件的所有属性
type:normal,notext( 没有文字时标记点居中 )



方法：
公共方法
loadData(json)
data.text = "华中师大教授讽范冰冰 不欢迎这样戏子";
        data.imageurl = "http://cms-bucket.nosdn.127.net/d325d6e7b40e45598aadb2fcc67249c220161028103329.png";
        data.defaulturl = "res:spritetest/image/wangyi/default_null_big_src.png";



事件：
newsliderClick 参数(e, index):监听newslider点击事件，返回点击标识
pageSelected 参数(e,index) : 监听newslider切换事件，返回切换后的标示



-->
<page>
    <module>
        <![CDATA[
       
    ]]>
    </module>
    <script>
        <![CDATA[
            var document = require("Document");
            var window = require("Window");
            var time = require("Time");
            var console = require("Console");




            var Newslider = function() {

                this.sliderHeader = null;
                this.sliderImgNew = null;
                this.sliderImgNewTextBox = null;
                this.sliderImgNewMarkBox = null;
                this.jsondatas = null;

                this.bottomMarkHeight = 30;
                this.markPointWidth = 6;
                this.markPointHeight = 6;
                this.markPointColor = "#ffffff";
                this.color = "#ffffff";
                this.fontSize = "15";

                this.index = 0;
                this.direction = "horizontal";
                this.drag = "true";
                this.loop = "false";
                this.autoPlay = "false";
                this.interval = 3;
                this.bounces = "true";

                this.type = "normal";

                this.pathLocation = "";

            };



            Newslider.prototype = {

                created: function() {
                    this.pathLocation = document.getPathLocation();
                    this.sliderHeader = this.getElement("sliderHeader");
                    this.sliderImgNewTextBox = this.getElement("sliderImgNewTextBox");
                    this.sliderImgNew = this.getElement("sliderImgNew");
                    this.sliderImgNewMarkBox = this.getElement("sliderImgNewMarkBox");

                    this.init();
                    var copythis = this;
                    this.sliderHeader.on('click', function(e) {
                        // myappjs.alert(this.getAttr("index"));
                        var arr = new Array();
                        arr.push(copythis.index);
                        copythis.fire("newsliderClick", arr);
                    });
                },
                //属性变更回调函数
                attrChanged: function(attrName, attrValue) {
                    if (attrName == "index") {
                        if (attrValue != null) {
                            this.index = attrValue;
                        }
                        this.sliderImgNew.setAttr("index", this.index);

                    }
                    if (attrName == "direction") {
                        if (attrValue != null) {
                            this.direction = attrValue;
                        }
                        this.sliderImgNew.setAttr("direction", this.direction);

                    }
                    if (attrName == "drag") {
                        if (attrValue != null) {
                            this.drag = attrValue;
                        }
                        this.sliderImgNew.setAttr("drag", this.drag);
                    }
                    if (attrName == "loop") {
                        if (attrValue != null) {
                            this.loop = attrValue;
                        }
                        //console.log("loop:"+this.loop);
                        this.sliderImgNew.setAttr("loop", this.loop);

                    }
                    if (attrName == "autoPlay") {
                        if (attrValue != null) {
                            this.autoPlay = attrValue;
                        }
                        this.sliderImgNew.setAttr("autoPlay", this.autoPlay);
                    }
                    if (attrName == "interval") {
                        if (attrValue != null) {
                            this.interval = attrValue;
                        }

                        this.sliderImgNew.setAttr("interval", this.interval);
                    }

                    if (attrName == "bounces") {
                        if (attrValue != null) {
                            this.bounces = attrValue;
                        }

                        this.sliderImgNew.setAttr("bounces", this.bounces);
                    }


                    if (attrName == "type") {
                        if (attrValue != null) {

                            this.type = attrValue;
                        }

                        if (attrValue == "notext") {

                            this.sliderImgNewMarkBox.setClassStyle("slider-bottom-notext-mark-box", this);
                            this.sliderImgNewMarkBox.clearStyle("background-color");
                            // this.sliderImgNewMarkBox.setStyle("background-color","transparent");
                            this.sliderImgNewTextBox.setStyle("display", "none");
                            this.sliderImgNewTextBox.setStyle("flex", "0");
                        }

                    }



                },
                //样式变更回调函数
                styleChanged: function(styleName, styleValue) {
                    if (styleName == "height") {
                        if (styleValue != null) {
                            this.height = styleValue;
                        }
                        this.sliderImgNew.setStyle("height", this.height);

                    }

                    if (styleName == "bottom-mark-height") {
                        if (styleValue != null) {
                            this.bottomMarkHeight = styleValue;
                        }
                        this.sliderImgNewMarkBox.setStyle("height", this.bottomMarkHeight);

                    }

                    if (styleName == "mark-point-width") {
                        if (styleValue != null) {
                            this.markPointWidth = styleValue;
                        }
                    }

                    if (styleName == "mark-point-height") {
                        if (styleValue != null) {
                            this.markPointHeight = styleValue;
                        }


                    }

                    if (styleName == "mark-point-color") {
                        if (styleValue != null) {
                            this.markPointColor = styleValue;
                        }
                    }

                    if (styleName == "color") {
                        if (styleValue != null) {
                            this.color = styleValue;
                        }
                        this.sliderImgNewTextBox.setStyle("color", this.color);
                    }

                    if (styleName == "font-size") {
                        if (styleValue != null) {
                            this.fontSize = styleValue;
                        }
                        this.sliderImgNewTextBox.setStyle("font-size", this.fontSize);
                    }
                },
                init: function() {


                    /*this.setStyle("height", this.getStyle("height"));
                    this.setStyle("bottom-mark-height", this.getStyle("bottom-mark-height"));
                    this.setStyle("mark-point-width", this.getStyle("mark-point-width"));
                    this.setStyle("mark-point-height", this.getStyle("mark-point-height"));
                    this.setStyle("mark-point-color", this.getStyle("mark-point-color"));
                    this.setStyle("color", this.getStyle("color"));
                    this.setStyle("font-size", this.getStyle("font-size"));
                    this.setAttr("autoPlay", this.getAttr("autoPlay"));
                    this.setAttr("drag", this.getAttr("drag"));
                    this.setAttr("loop", this.getAttr("loop"));
                    this.setAttr("interval", this.getAttr("interval"));
                    this.setAttr("bounces", this.getAttr("bounces"));
                    this.setAttr("direction", this.getAttr("direction"));
                    this.setAttr("index", this.getAttr("index"));*/


                    /*if (this.getAttr("type") != null) {

                        this.type = this.getAttr("type");
                    }

                    if (this.type == "notext") {

                        this.sliderImgNewMarkBox.setClassStyle("slider-bottom-notext-mark-box", this);

                        this.sliderImgNewMarkBox.clearStyle("background-color");
                        // this.sliderImgNewMarkBox.setStyle("background-color","transparent");


                        this.sliderImgNewTextBox.setStyle("display", "none");
                        this.sliderImgNewTextBox.setStyle("flex", "0");

                        
                    }*/


                },
                //外部调用js方法
                loadData: function(jsondatas) {
                    var copythis = this;
                    this.jsondatas = jsondatas;

                    var arr = this.jsondatas.datas;

                    var beforeDomObj = this.getElement("sliderImgNewMarkBox");
                    for (i = 0; i < arr.length; i++) {
                        var markstr = '<box id="sliderImgNewMark_' + i + '"  class="markbox" style="width:' + this.markPointWidth + ';height:' + this.markPointHeight + ';background-color:' + this.markPointColor + ';border-radius:' + this.markPointWidth / 2 + '"/>';
                        var markbox = document.createElementByXml(markstr, this);
                        beforeDomObj.appendChild(markbox);
                        //这里先不刷新，在pageSelected里面又一次刷新
                    }


                    this.sliderImgNew.on("pageSelected", function(e, param) {

                        var datas = copythis.jsondatas.datas;
                        copythis.sliderImgNewTextBox.setText(datas[param].text);

                        for (i = 0; i < datas.length; i++) {
                            var markboxdom = copythis.getElement("sliderImgNewMark_" + i);
                            if (i == param) {
                                markboxdom.setStyle("opacity", 1);
                                markboxdom.setStyle("width", copythis.markPointWidth);
                                markboxdom.setStyle("height", copythis.markPointHeight);
                                markboxdom.setStyle("border-radius", copythis.markPointWidth / 2);
                            } else {
                                markboxdom.setStyle("opacity", 0.5);
                                markboxdom.setStyle("width", copythis.markPointWidth / 2);
                                markboxdom.setStyle("height", copythis.markPointHeight / 2);
                                markboxdom.setStyle("border-radius", copythis.markPointWidth / 4);
                            }
                        }

                        copythis.index = param;
                        copythis.sliderHeader.refresh();
                        var arr = new Array();
                        arr.push(param);
                        copythis.fire("pageSelected", arr);
                    });


                    //var xmlstr = '';						
                    for (i = 0; i < arr.length; i++) {
                        //因为这里的数据是外部通过js注入，内部无非判断图片路径是基于模板还是uixml这里做判断，按基于uixml处理，复合开发者的思维。
                        if ((arr[i].defaulturl).indexOf("res:") > -1 || (arr[i].defaulturl).indexOf("http://") > -1 || (arr[i].defaulturl).indexOf("https://") > -1) {

                        } else {
                            arr[i].defaulturl = this.pathLocation + "/" + arr[i].defaulturl;
                        }

                        if ((arr[i].imageurl).indexOf("res:") > -1 || (arr[i].imageurl).indexOf("http://") > -1 || (arr[i].imageurl).indexOf("https://") > -1) {

                        } else {
                            arr[i].imageurl = this.pathLocation + "/" + arr[i].imageurl;
                        }
                        var xmlstr = '<box >' +
                            '<image style="flex:1;scaleType:cover;cacheType:disk;fade:true;" defaultSrc="' + arr[i].defaulturl + '"  src="' + arr[i].imageurl + '" />' +
                            '</box>';
                        var dombox = document.createElementByXml(xmlstr, this);
                        this.sliderImgNew.appendChild(dombox);
                    }
                    //注意：slider控件有自己的refresh方法，需要调用自己的刷新，android对document.refresh()不生效。
                    this.sliderImgNew.refresh();



                    //this.sliderImgNew.setAttr("index", this.index);


                }
            };

            module.exports = Newslider;
        ]]>
    </script>
    <style>
        @import url("newslider.layout.css");
        @import url("newslider.color.css");
    </style>
    <ui>
        <box id="sliderHeader" class="newslider">
            <slider id="sliderImgNew" style="flex:1;">

            </slider>

            <box class="slider-bottom-mark-box" id="sliderImgNewMarkBox">
                <text id="sliderImgNewTextBox" class="slider-textbox flex1"></text>


            </box>
        </box>
    </ui>

</page>